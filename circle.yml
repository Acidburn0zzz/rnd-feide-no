machine:
  environment:
    PROJECT_NAME: turnkey-cocoa-720
    CLUSTER_NAME: cluster-1
    CLOUDSDK_COMPUTE_ZONE: europe-west1-c
    DEBIAN_FRONTEND: noninteractive
    CONTAINER_NAME: rnd-feide-no
    IMAGE_BASE: uninettno/rnd-feide-no
    KUBERNETES_SERVER: https://104.155.105.25
  services:
    - docker

dependencies:
  pre:
    - sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update
    - sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update kubectl
    - echo $GKE_SERVICE_ACCOUNT | base64 --decode -i > ${HOME}/account-auth.json
    - sudo /opt/google-cloud-sdk/bin/gcloud config set project $PROJECT_NAME
    - sudo /opt/google-cloud-sdk/bin/gcloud --quiet config set container/cluster $CLUSTER_NAME
    # Reading the zone from the env var is not working so we set it here
    - sudo /opt/google-cloud-sdk/bin/gcloud config set compute/zone ${CLOUDSDK_COMPUTE_ZONE}

    # - sudo chown -R ubuntu:ubuntu ${HOME}/.kube
    # - kubectl config set-cluster e2e --server=https://104.155.105.25
    - kubectl config set-credentials circleci --token=${GKE_SERVICE_TOKEN}
    - kubectl config set-credentials admin --username=admin --password=${GKE_ADMIN_PASSWD}
    - kubectl config set-cluster cluster-1 --server=${KUBERNETES_SERVER} --insecure-skip-tls-verify=true
    - kubectl config set-context gce --user=admin --cluster=cluster-1 --namespace=production
    - kubectl config use-context gce
    # - kubectl config view
    - kubectl get pods
    - kubectl get serviceaccounts
    - docker build -t ${IMAGE_BASE}:$CIRCLE_SHA1 .
    # Using a separate tag command until Docker 1.10 is available on CircleCI, then we can use two tags in the build command above
    # - gcloud docker push


# Automatically configure kubectl
    # - sudo /opt/google-cloud-sdk/bin/gcloud auth activate-service-account --key-file ${HOME}/account-auth.json
    # - sudo /opt/google-cloud-sdk/bin/gcloud --quiet container clusters get-credentials $CLUSTER_NAME


# test:
#   post:
#     - docker run -d -p 3000:3000 -e "SECRET_KEY_BASE=abcd1234" eu.gcr.io/${PROJECT_NAME}/${CONTAINER_NAME}:$CIRCLE_SHA1; sleep 10
#     - curl --retry 10 --retry-delay 5 -v http://localhost:3000

deployment:
  preprod:
    branch: master
    commands:
      - echo "Deployment [MASTER / Preprod] ${IMAGE_BASE}:testing-$CIRCLE_BUILD_NUM"
      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
      - docker tag ${IMAGE_BASE}:$CIRCLE_SHA1 ${IMAGE_BASE}:testing-${CIRCLE_BUILD_NUM}
      - docker push
      # - gcloud docker push eu.gcr.io/${PROJECT_NAME}/${CONTAINER_NAME}
  prod:
    branch: stable
    commands:
      - echo "Deployment [STABLE / Production] ${IMAGE_BASE}:stable-$CIRCLE_BUILD_NUM"
      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
      - docker tag ${IMAGE_BASE}:$CIRCLE_SHA1 ${IMAGE_BASE}:stable-${CIRCLE_BUILD_NUM}
      - docker push
      # - gcloud docker push eu.gcr.io/${PROJECT_NAME}/${CONTAINER_NAME}
